#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"

gemfile do
  source "https://rubygems.org"

  gem "splunk-otel", path: "../../"
  gem "opentelemetry-exporter-otlp", "~> 0.21.0"

end

require "splunk/otel"
require "splunk/otel/logging"
require "opentelemetry/exporter/otlp"
require "net/http"
require "json"

def some_spans
  logger = Logger.new($stdout)
  logger.level = Logger::INFO

  logger.formatter = proc do |_severity, _datetime, _progname, msg|
    "#{Splunk::Otel::Logging.format_correlation} : #{msg}\n"
  end

  Splunk::Otel.configure
  tracer = OpenTelemetry.tracer_provider.tracer("mytracer")
  tracer.in_span("span-1") do |_span|
    tracer.in_span("span-2") do |_span|
      logger.info("show log correlation")
    end
  end
end

def test
  collector_host = ENV.fetch("COLLECTOR_HOST", "localhost")
  collector_port = ENV.fetch("COLLECTOR_PORT", "8378").to_i

  response = Net::HTTP.get(collector_host, "/?timeout=20&count=1", collector_port)
  spans = JSON.parse(response)
  assert spans.count >= 1
end

require "irb"
IRB.start(__FILE__)
